name: Build APK

on:
#  push:
#    branches: [ "master", "main" ]
#    paths-ignore:
#      - '**.md'
#      - 'RELEASE_INFO'
#      - 'fastlane/**'
#      - '.github/workflows/*.yml'
  workflow_dispatch: { }

env:
  # Misc
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # Signing info
  # IDE_SIGNING_ALIAS: ${{ secrets.IDE_SIGNING_ALIAS }}
  # IDE_SIGNING_AUTH_PASS: ${{ secrets.IDE_SIGNING_AUTH_PASS }}
  # IDE_SIGNING_AUTH_USER: ${{ secrets.IDE_SIGNING_AUTH_USER }}
  # IDE_SIGNING_KEY_PASS: ${{ secrets.IDE_SIGNING_KEY_PASS }}
  # IDE_SIGNING_STORE_PASS: ${{ secrets.IDE_SIGNING_STORE_PASS }}
  # IDE_SIGNING_URL: ${{ secrets.IDE_SIGNING_URL }}
  # IDE_SIGNING_KEY_BIN: ${{ secrets.IDE_SIGNING_KEY_BIN }}

  # Publishing credentials
  # ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ secrets.MVN_USERNAME }}
  # ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.MVN_PASSWORD }}
  # ORG_GRADLE_PROJECT_signingInMemoryKey: ${{ secrets.MVN_SIGNING_KEY }}
  # ORG_GRADLE_PROJECT_signingInMemoryKeyId: ${{ secrets.MVN_SIGNING_KEY_ID }}
  # ORG_GRADLE_PROJECT_signingInMemoryKeyPassword: ${{ secrets.MVN_SIGNING_KEY_PASSWORD }}

  # Build configuration
  BUILD_JAVA_VERSION: '17'
  BUILD_JAVA_DIST: 'adopt'
  ReleaseAndroIDE: true

  # Output configuration
  DefaultAPK_Output_Path: './core/app/build/outputs/apk'
  Artifact_Output_Path: './artifact_output'

jobs:
  build_apk:
    strategy:
      matrix:
        abi_type: ['arm64-v8a']
        build_type: ['release']
        # abi_type: ['arm64-v8a', 'armeabi-v7a', 'x86_64']
        # build_type: ['debug', 'release']
    name: Build APK
    runs-on: ubuntu-latest
    steps:

      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.12.1
        with:
          access_token: ${{ github.token }}

      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'
          fetch-depth: 0
      
      - name: Set Short SHA
        id: set_sha
        run: echo "short_sha=${GITHUB_SHA::7}" >> $GITHUB_OUTPUT
      
      - name: Set Up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.BUILD_JAVA_VERSION }}
          distribution: ${{ env.BUILD_JAVA_DIST }}

      - name: Make Gradle Wrapper Executable
        run: chmod +x ./gradlew

      - name: Restore Cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Build ${{ matrix.build_type }} APK
        run: |
          build_type=${{ matrix.build_type }}
          ./gradlew :core:app:assemble${build_type^}

      - name: Copy APK And Show Output Path
        run: |
          echo ">>DefaultAPK_Output_Path and sub:"
          ls -laR ${{ env.DefaultAPK_Output_Path }}
          mkdir -p ${{ env.Artifact_Output_Path }}
          cp -r ${{ env.DefaultAPK_Output_Path }}/${{ matrix.build_type }}/app-${{ matrix.abi_type }}-${{ matrix.build_type }}.apk ${{ env.Artifact_Output_Path }}/AndroIDE_${{ matrix.abi_type }}_${{ matrix.build_type }}.apk
          echo ">>Artifact_Output_Path and sub:"
          ls -laR ${{ env.Artifact_Output_Path }}
      
      - name: Upload ${{ matrix.abi_type }} ${{ matrix.build_type }} APK
        uses: actions/upload-artifact@v4
        with:
          name: AndroIDE_${{ matrix.abi_type }}_${{ matrix.build_type }}_${{ steps.set_sha.outputs.short_sha }}
          path: |
            ${{ env.Artifact_Output_Path }}/AndroIDE_${{ matrix.abi_type }}_${{ matrix.build_type }}.apk

      - name: Upload ${{ matrix.build_type }} Mappings
        if: ${{ always() && matrix.build_type == 'release' }}
        uses: actions/upload-artifact@v4
        with:
          name: release-mappings-${{ steps.set_sha.outputs.short_sha }}
          path: '**/build/outputs/mapping'

