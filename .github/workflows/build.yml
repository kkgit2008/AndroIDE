name: Build and test

on:
#  push:
#    branches: [ "master", "main", "release/**" ]
#    paths-ignore:
#      - '**.md'
#      - 'RELEASE_INFO'
#      - 'fastlane/**'
#      - '.github/workflows/*.yml'
#  pull_request:
#    branches: [ "main" ]
#    paths-ignore:
#      - '**.md'
#      - 'RELEASE_INFO'
#      - 'fastlane/**'
#      - '.github/workflows/crowdin_contributors.yml'
  workflow_dispatch: { }

env:
  # Misc
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # Signing info
  # IDE_SIGNING_ALIAS: ${{ secrets.IDE_SIGNING_ALIAS }}
  # IDE_SIGNING_AUTH_PASS: ${{ secrets.IDE_SIGNING_AUTH_PASS }}
  # IDE_SIGNING_AUTH_USER: ${{ secrets.IDE_SIGNING_AUTH_USER }}
  # IDE_SIGNING_KEY_PASS: ${{ secrets.IDE_SIGNING_KEY_PASS }}
  # IDE_SIGNING_STORE_PASS: ${{ secrets.IDE_SIGNING_STORE_PASS }}
  # IDE_SIGNING_URL: ${{ secrets.IDE_SIGNING_URL }}
  # IDE_SIGNING_KEY_BIN: ${{ secrets.IDE_SIGNING_KEY_BIN }}

  # Publishing credentials
  # ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ secrets.MVN_USERNAME }}
  # ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.MVN_PASSWORD }}
  # ORG_GRADLE_PROJECT_signingInMemoryKey: ${{ secrets.MVN_SIGNING_KEY }}
  # ORG_GRADLE_PROJECT_signingInMemoryKeyId: ${{ secrets.MVN_SIGNING_KEY_ID }}
  # ORG_GRADLE_PROJECT_signingInMemoryKeyPassword: ${{ secrets.MVN_SIGNING_KEY_PASSWORD }}

  # Build configuration
  BUILD_JAVA_VERSION: '17'
  BUILD_JAVA_DIST: 'adopt'
  BUILD_IS_RELEASE: true
  ReleaseAndroidIDE: true

  # Output configuration
  DefaultAPK_Output_Path: './core/app/build/outputs/apk'

jobs:
  build_apk:
    strategy:
      matrix:
        abi_type: ['arm64-v8a']
        build_type: ['debug']
        # abi_type: ['arm64-v8a', 'armeabi-v7a', 'x86_64']
        # build_type: ['debug', 'release']
    name: Build APK
    runs-on: ubuntu-latest
    steps:

      - name: Cancel previous runs
        uses: styfle/cancel-workflow-action@0.12.1
        with:
          access_token: ${{ github.token }}

      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'
          fetch-depth: 0
      
      - name: Set short SHA
        id: set_sha
        run: echo "short_sha=${GITHUB_SHA::7}" >> $GITHUB_OUTPUT
      
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.BUILD_JAVA_VERSION }}
          distribution: ${{ env.BUILD_JAVA_DIST }}

      - name: Change Gradle wrapper permissions
        run: chmod +x ./gradlew

      - name: Restore cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Assemble ${{ matrix.build_type }} APK
        run: |
          build_type=${{ matrix.build_type }}
          ./gradlew :core:app:assemble${build_type^}

      - name: Get SHA256 And Show Output Path
        run: |
          sha256sum ${{ env.DefaultAPK_Output_Path }}/app-${{ matrix.abi_type }}-${{ matrix.build_type }}.apk > ${{ env.DefaultAPK_Output_Path }}/app-${{ matrix.abi_type }}-${{ matrix.build_type }}.apk.sha256
          ls -la ${{ env.ARTIFACT_DIR }}
            echo ">>Output path:"
            ls -la ${{ env.DefaultAPK_Output_Path }}
      
      - name: Upload ${{ matrix.abi_type }} ${{ matrix.build_type }} APK
        uses: actions/upload-artifact@v4
        with:
          name: AndroIDE-${{ matrix.abi_type }}-${{ matrix.build_type }}-${{ steps.set_sha.outputs.short_sha }}
          path: |
          ${{ env.DefaultAPK_Output_Path }}/app-${{ matrix.abi_type }}-${{ matrix.build_type }}.apk
          ${{ env.DefaultAPK_Output_Path }}/app-${{ matrix.abi_type }}-${{ matrix.build_type }}.apk.sha256
      
#      - name: Upload arm64-v8a ${{ matrix.build_type }} APK
#        uses: actions/upload-artifact@v4
#        with:
#          name: AndroIDE-arm64-v8a-${{ matrix.build_type }}-${{ steps.set_sha.outputs.short_sha }}
#          path: app-arm64-v8a-${{ matrix.build_type }}.apk
      
#      - name: Upload armeabi-v7a ${{ matrix.build_type }} APK
#        uses: actions/upload-artifact@v4
#        with:
#          name: apk-armeabi-v7a-${{ matrix.build_type }}-${{ steps.set_sha.outputs.short_sha }}
#          path: app-armeabi-v7a-${{ matrix.build_type }}.apk
#      
#      - name: Upload x86_64 ${{ matrix.build_type }} APK
#        uses: actions/upload-artifact@v4
#        with:
#          name: apk-x86_64-${{ matrix.build_type }}-${{ steps.set_sha.outputs.short_sha }}
#          path: app-x86_64-${{ matrix.build_type }}.apk
      
      - name: Upload ${{ matrix.build_type }} Mappings
        if: ${{ always() && matrix.build_type == 'release' }}
        uses: actions/upload-artifact@v4
        with:
          name: release-mappings-${{ steps.set_sha.outputs.short_sha }}
          path: '**/build/outputs/mapping'

