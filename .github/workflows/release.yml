name: Upload Release

on:
  workflow_dispatch: {}

# Cancel old runs
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # ---------- 1. Build all ABIs ----------
  build_all_abi:
    strategy:
      fail-fast: false
      matrix:
        abi_type: [arm64-v8a]
        #abi_type: ['arm64-v8a', 'armeabi-v7a', 'x86_64']
    uses: ./.github/workflows/_build-apk-reusable.yml
    with:
      abi_type:   ${{ matrix.abi_type }}
      build_type: release
      override_IsPublish: true
    # get output params from reusable workflow
    secrets: inherit

  # ---------- 2. Create git tag ----------
  create_tag:
    needs: build_all_abi
    runs-on: ubuntu-latest
    outputs:
      final_tag: ${{ steps.final_tag.outputs.final_tag }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check branch
        run: |
          BRANCH="${{ needs.build_all_abi.outputs.branch }}"
          CURRENT=$(git rev-parse --abbrev-ref HEAD)
          [ "$CURRENT" = "$BRANCH" ] || { echo "Release configured for '$BRANCH', but current is '$CURRENT'"; exit 1; }

      - name: Compute final tag name
        id: final_tag
        run: |
          RAW_TAG="${{ needs.build_all_abi.outputs.ver_name }}"
          PRERELEASE="${{ needs.build_all_abi.outputs.prerelease }}"
          SHORT_SHA="${{ needs.build_all_abi.outputs.short_sha }}"
          TAG_SUFFIX="-$SHORT_SHA"
          if [ "$PRERELEASE" = "true" ]; then
            echo "final_tag=${RAW_TAG}${TAG_SUFFIX}" >> $GITHUB_OUTPUT
          else
            echo "final_tag=${RAW_TAG}" >> $GITHUB_OUTPUT
          fi 
          
      - name: Create & Push Tag
        run: |
          TAG="${{ steps.final_tag.outputs.final_tag }}"
          MSG="$TAG"
          
          # Check Tag Exist
          if git rev-parse "$TAG" >/dev/null 2>&1; then
            echo "Tag $TAG already exists"
            exit 1
          fi
          
          git config user.name  "github-actions"
          git config user.email "actions@github.com"
          git tag -a "$TAG" -m "$MSG"
          git push origin "$TAG"

  # ---------- 3. Get all artifacts and create gitHub release ----------
  publish_release:
    needs: [build_all_abi, create_tag]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Download All ABI Artifacts
        uses: actions/download-artifact@v4
        with:
          # The same in _build-apk-reusable.yml
          pattern: AndroIDE*
          merge-multiple: true
          path: release_assets/

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          # release tag
          tag_name: ${{ needs.create_tag.outputs.final_tag }}
          # release title
          name:     ${{ needs.build_all_abi.outputs.title }}
          body:     ${{ needs.build_all_abi.outputs.notes }}
          files:    release_assets/*
          draft:    false
          prerelease: ${{ needs.build_all_abi.outputs.prerelease == 'true' }}
          make_latest: ${{ needs.build_all_abi.outputs.prerelease != 'true' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

